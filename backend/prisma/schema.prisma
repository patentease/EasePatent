datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(uuid())
  email         String        @unique
  password      String
  firstName     String
  lastName      String
  role          String        @default("USER")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  settings      UserSettings?
  subscriptions Subscription[]
  quotas        UserQuota?
}

model UserSettings {
  id                 String   @id @default(uuid())
  userId             String   @unique
  emailNotifications Boolean  @default(true)
  theme              String   @default("light")
  language           String   @default("en")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id])
}

model Subscription {
  id                String            @id @default(uuid())
  userId            String
  plan              String
  status            String
  startDate         DateTime
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  trialEndsAt       DateTime?
  cancelledAt       DateTime?
  autoRenew         Boolean          @default(true)
  paymentMethod     String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  user              User             @relation(fields: [userId], references: [id])
  usage             SubscriptionUsage[]
}

model SubscriptionUsage {
  id              String      @id @default(uuid())
  subscriptionId  String
  period          Json        // { start: Date, end: Date }
  usage           Json        // { patentChecks: number, blockchainTimestamps: number, consultationMinutes: number }
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  subscription    Subscription @relation(fields: [subscriptionId], references: [id])
}

model UserQuota {
  id                          String   @id @default(uuid())
  userId                      String   @unique
  patentChecksRemaining       Int
  blockchainTimestampsRemaining Int
  consultationMinutesRemaining Int
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  user                        User     @relation(fields: [userId], references: [id])
}

model SubscriptionPlan {
  id          String   @id @default(uuid())
  name        String   @unique
  features    Json     // { patentChecks: number, blockchainTimestamps: number, consultationMinutes: number, ... }
  trialDays   Int?
  monthlyPrice Float
  annualPrice  Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 