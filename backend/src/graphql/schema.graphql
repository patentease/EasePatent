type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  plan: Plan!
  role: String!
  createdAt: String!
  updatedAt: String!
}

enum Plan {
  free
  pro
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  plan: Plan!
}

type AuthPayload {
  token: String!
  user: User!
}

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}

type Mutation {
  register(input: RegisterInput!): AuthPayload!
  uploadFile(file: Upload!): File!
  # ... other mutations
} 